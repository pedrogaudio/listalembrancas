@page "/listalembrancas"
@using ItensPresentes.Model;
@using ItensPresentes.Services;
@using Supabase;
@using System.Collections.Generic;
@using ItensPresentes.Data;
@inject ISupabaseService SupabaseService

<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />

<h3>Lista de Lembranças</h3>
<br />
<div class="event-schedule-area-two bg-color pad100">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Item</th>
                                <th>&nbsp;</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (apresentationItensCasaModel.Data == null)
                            {
                                <tr><td><em>Carregando ...</em></td></tr>
                            }
                            else
                            {
                                foreach (var item in apresentationItensCasaModel.Data)
                                {
                                    <tr>
                                        <td style="vertical-align: bottom;">
                                            @if (!string.IsNullOrEmpty(item.Link))
                                            {
                                                <a href="@item.Link" target="_blank">@item.NomeItem</a>
                                            }
                                            else
                                            {
                                                @item.NomeItem
                                            }
                                        </td>
                                        <td style="vertical-align: bottom;">
                                            <div class="primary-btn">
                                                <a type="button" class="btn btn-primary" @onclick="() => OpenPresenteDialog(item)">Presentear</a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
                <div>
                    <ul class="pagination">
                        @for (int i = 1; i <= apresentationItensCasaModel.TotalPages; i++)
                        {
                            var currentPageIndex = i; // Captura o valor atual de i
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" @onclick="() => ChangePage(currentPageIndex)">@i</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <br />
    <br />
    <br />
</div>

@if (DeleteDialogOpen)
{
    <ModalDialog Title="Lembrança" OnClose="@OnPresentDialogClose" ItemDeCasa="@_itemDeCasaUpdate"> </ModalDialog>
}

@code {

    private ApresentationItensCasaModel apresentationItensCasaModel = new ApresentationItensCasaModel(); // Inicialize o objeto aqui
    private bool modalVisivel = false;
    private string nomePresenteador;
    public bool DeleteDialogOpen { get; set; }
    private ItemCasaModel _itemDeCasaUpdate { get; set; }
    private int currentPage = 1;
    
    private void OnPresentDialogClose(bool accepted)
    {
        DeleteDialogOpen = false;
        StateHasChanged();
    }

    private void OpenPresenteDialog(ItemCasaModel item)
    {
        DeleteDialogOpen = true;
        _itemDeCasaUpdate = item;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        await SupabaseService.InitializeAsync();
        await CarregarListas(currentPage); // Carregar a página inicial
    }

    private async Task CarregarListas(int page)
    {
        apresentationItensCasaModel.Data = await SupabaseService.GetPaginatedResult(page);
        apresentationItensCasaModel.Count = await SupabaseService.GetCount();

        StateHasChanged();
    }

    private void ChangePage(int page)
    {
        currentPage = page;
        CarregarListas(currentPage);
    }
}